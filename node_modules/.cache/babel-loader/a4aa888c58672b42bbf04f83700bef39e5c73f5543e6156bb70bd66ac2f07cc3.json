{"ast":null,"code":"import React,{useState,useEffect}from'react';import ExpenseService from'../services/ExpenseService';import EditExpenseForm from'./EditExpenseForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExpenseList=()=>{const[expenses,setExpenses]=useState([]);const[editExpense,setEditExpense]=useState(null);// For editing\nconst[currentPage,setCurrentPage]=useState(0);const[totalPages,setTotalPages]=useState(0);const[filterCategory,setFilterCategory]=useState('');// For category filter\n// Fetch paginated expenses whenever the currentPage or filterCategory changes\nuseEffect(()=>{fetchExpenses(currentPage,filterCategory);},[currentPage,filterCategory]);const fetchExpenses=(page,category)=>{if(category){// If a category is selected, fetch filtered expenses\nExpenseService.getFilteredExpenses(category,page,5)// Assuming the backend supports filtered pagination\n.then(response=>{setExpenses(response.data.content);// Paginated filtered content\nsetTotalPages(response.data.totalPages);}).catch(error=>{console.error('Error fetching filtered expenses:',error);});}else{// If no filter, fetch all expenses paginated\nExpenseService.getPaginatedExpenses(page,5)// Assuming the backend supports pagination\n.then(response=>{setExpenses(response.data.content);// Paginated content\nsetTotalPages(response.data.totalPages);}).catch(error=>{console.error('Error fetching paginated expenses:',error);});}};// Handle delete\nconst handleDelete=id=>{ExpenseService.deleteExpense(id).then(()=>{alert('Expense deleted successfully!');fetchExpenses(currentPage,filterCategory);// Refresh the current page with filter\n}).catch(error=>{console.error('Error deleting expense:',error);});};// Handle edit button click\nconst handleEdit=expense=>{setEditExpense(expense);};// Handle filter change\nconst handleFilterChange=e=>{setFilterCategory(e.target.value);};// Pagination controls\nconst handleNext=()=>{if(currentPage<totalPages-1){setCurrentPage(currentPage+1);}};const handlePrevious=()=>{if(currentPage>0){setCurrentPage(currentPage-1);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Expense List (Paginated)\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Filter by Category: \"}),/*#__PURE__*/_jsxs(\"select\",{value:filterCategory,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Food\",children:\"Food\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Transport\",children:\"Transport\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Utilities\",children:\"Utilities\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Category\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:expenses.map(expense=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:expense.id}),/*#__PURE__*/_jsx(\"td\",{children:expense.description}),/*#__PURE__*/_jsx(\"td\",{children:expense.amount}),/*#__PURE__*/_jsx(\"td\",{children:expense.category}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(expense),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(expense.id),children:\"Delete\"})]})]},expense.id))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevious,disabled:currentPage===0,children:\"Previous\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage+1,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNext,disabled:currentPage===totalPages-1,children:\"Next\"})]}),editExpense&&/*#__PURE__*/_jsx(EditExpenseForm,{expense:editExpense,onClose:()=>{setEditExpense(null);fetchExpenses(currentPage,filterCategory);// Refresh after editing\n}})]});};export default ExpenseList;","map":{"version":3,"names":["React","useState","useEffect","ExpenseService","EditExpenseForm","jsx","_jsx","jsxs","_jsxs","ExpenseList","expenses","setExpenses","editExpense","setEditExpense","currentPage","setCurrentPage","totalPages","setTotalPages","filterCategory","setFilterCategory","fetchExpenses","page","category","getFilteredExpenses","then","response","data","content","catch","error","console","getPaginatedExpenses","handleDelete","id","deleteExpense","alert","handleEdit","expense","handleFilterChange","e","target","value","handleNext","handlePrevious","children","onChange","map","description","amount","onClick","disabled","onClose"],"sources":["/workspaces/infosys_expense/src/components/ExpenseList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ExpenseService from '../services/ExpenseService';\nimport EditExpenseForm from './EditExpenseForm';\n\nconst ExpenseList = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [editExpense, setEditExpense] = useState(null); // For editing\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [filterCategory, setFilterCategory] = useState(''); // For category filter\n\n  // Fetch paginated expenses whenever the currentPage or filterCategory changes\n  useEffect(() => {\n    fetchExpenses(currentPage, filterCategory);\n  }, [currentPage, filterCategory]);\n\n  const fetchExpenses = (page, category) => {\n    if (category) {\n      // If a category is selected, fetch filtered expenses\n      ExpenseService.getFilteredExpenses(category, page, 5) // Assuming the backend supports filtered pagination\n        .then((response) => {\n          setExpenses(response.data.content); // Paginated filtered content\n          setTotalPages(response.data.totalPages);\n        })\n        .catch((error) => {\n          console.error('Error fetching filtered expenses:', error);\n        });\n    } else {\n      // If no filter, fetch all expenses paginated\n      ExpenseService.getPaginatedExpenses(page, 5) // Assuming the backend supports pagination\n        .then((response) => {\n          setExpenses(response.data.content); // Paginated content\n          setTotalPages(response.data.totalPages);\n        })\n        .catch((error) => {\n          console.error('Error fetching paginated expenses:', error);\n        });\n    }\n  };\n\n  // Handle delete\n  const handleDelete = (id) => {\n    ExpenseService.deleteExpense(id)\n      .then(() => {\n        alert('Expense deleted successfully!');\n        fetchExpenses(currentPage, filterCategory); // Refresh the current page with filter\n      })\n      .catch((error) => {\n        console.error('Error deleting expense:', error);\n      });\n  };\n\n  // Handle edit button click\n  const handleEdit = (expense) => {\n    setEditExpense(expense);\n  };\n\n  // Handle filter change\n  const handleFilterChange = (e) => {\n    setFilterCategory(e.target.value);\n  };\n\n  // Pagination controls\n  const handleNext = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Expense List (Paginated)</h2>\n      \n      {/* Filter by Category */}\n      <div>\n        <label>Filter by Category: </label>\n        <select value={filterCategory} onChange={handleFilterChange}>\n          <option value=\"\">All</option>\n          <option value=\"Food\">Food</option>\n          <option value=\"Transport\">Transport</option>\n          <option value=\"Utilities\">Utilities</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      {/* Expense List Table */}\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Description</th>\n            <th>Amount</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map((expense) => (\n            <tr key={expense.id}>\n              <td>{expense.id}</td>\n              <td>{expense.description}</td>\n              <td>{expense.amount}</td>\n              <td>{expense.category}</td>\n              <td>\n                <button onClick={() => handleEdit(expense)}>Edit</button>\n                <button onClick={() => handleDelete(expense.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Pagination Controls */}\n      <div>\n        <button onClick={handlePrevious} disabled={currentPage === 0}>\n          Previous\n        </button>\n        <span>\n          Page {currentPage + 1} of {totalPages}\n        </span>\n        <button onClick={handleNext} disabled={currentPage === totalPages - 1}>\n          Next\n        </button>\n      </div>\n\n      {/* Edit Expense Form */}\n      {editExpense && (\n        <EditExpenseForm\n          expense={editExpense}\n          onClose={() => {\n            setEditExpense(null);\n            fetchExpenses(currentPage, filterCategory); // Refresh after editing\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ExpenseList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,cAAc,KAAM,4BAA4B,CACvD,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAE;AACtD,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACiB,cAAc,CAAEC,iBAAiB,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE1D;AACAC,SAAS,CAAC,IAAM,CACdkB,aAAa,CAACN,WAAW,CAAEI,cAAc,CAAC,CAC5C,CAAC,CAAE,CAACJ,WAAW,CAAEI,cAAc,CAAC,CAAC,CAEjC,KAAM,CAAAE,aAAa,CAAGA,CAACC,IAAI,CAAEC,QAAQ,GAAK,CACxC,GAAIA,QAAQ,CAAE,CACZ;AACAnB,cAAc,CAACoB,mBAAmB,CAACD,QAAQ,CAAED,IAAI,CAAE,CAAC,CAAE;AAAA,CACnDG,IAAI,CAAEC,QAAQ,EAAK,CAClBd,WAAW,CAACc,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAE;AACpCV,aAAa,CAACQ,QAAQ,CAACC,IAAI,CAACV,UAAU,CAAC,CACzC,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC3D,CAAC,CAAC,CACN,CAAC,IAAM,CACL;AACA1B,cAAc,CAAC4B,oBAAoB,CAACV,IAAI,CAAE,CAAC,CAAE;AAAA,CAC1CG,IAAI,CAAEC,QAAQ,EAAK,CAClBd,WAAW,CAACc,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAE;AACpCV,aAAa,CAACQ,QAAQ,CAACC,IAAI,CAACV,UAAU,CAAC,CACzC,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC5D,CAAC,CAAC,CACN,CACF,CAAC,CAED;AACA,KAAM,CAAAG,YAAY,CAAIC,EAAE,EAAK,CAC3B9B,cAAc,CAAC+B,aAAa,CAACD,EAAE,CAAC,CAC7BT,IAAI,CAAC,IAAM,CACVW,KAAK,CAAC,+BAA+B,CAAC,CACtCf,aAAa,CAACN,WAAW,CAAEI,cAAc,CAAC,CAAE;AAC9C,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAAC,CAAC,CACN,CAAC,CAED;AACA,KAAM,CAAAO,UAAU,CAAIC,OAAO,EAAK,CAC9BxB,cAAc,CAACwB,OAAO,CAAC,CACzB,CAAC,CAED;AACA,KAAM,CAAAC,kBAAkB,CAAIC,CAAC,EAAK,CAChCpB,iBAAiB,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACnC,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAI5B,WAAW,CAAGE,UAAU,CAAG,CAAC,CAAE,CAChCD,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CACjC,CACF,CAAC,CAED,KAAM,CAAA6B,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI7B,WAAW,CAAG,CAAC,CAAE,CACnBC,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CACjC,CACF,CAAC,CAED,mBACEN,KAAA,QAAAoC,QAAA,eACEtC,IAAA,OAAAsC,QAAA,CAAI,0BAAwB,CAAI,CAAC,cAGjCpC,KAAA,QAAAoC,QAAA,eACEtC,IAAA,UAAAsC,QAAA,CAAO,sBAAoB,CAAO,CAAC,cACnCpC,KAAA,WAAQiC,KAAK,CAAEvB,cAAe,CAAC2B,QAAQ,CAAEP,kBAAmB,CAAAM,QAAA,eAC1DtC,IAAA,WAAQmC,KAAK,CAAC,EAAE,CAAAG,QAAA,CAAC,KAAG,CAAQ,CAAC,cAC7BtC,IAAA,WAAQmC,KAAK,CAAC,MAAM,CAAAG,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCtC,IAAA,WAAQmC,KAAK,CAAC,WAAW,CAAAG,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC5CtC,IAAA,WAAQmC,KAAK,CAAC,WAAW,CAAAG,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC5CtC,IAAA,WAAQmC,KAAK,CAAC,OAAO,CAAAG,QAAA,CAAC,OAAK,CAAQ,CAAC,EAC9B,CAAC,EACN,CAAC,cAGNpC,KAAA,UAAAoC,QAAA,eACEtC,IAAA,UAAAsC,QAAA,cACEpC,KAAA,OAAAoC,QAAA,eACEtC,IAAA,OAAAsC,QAAA,CAAI,IAAE,CAAI,CAAC,cACXtC,IAAA,OAAAsC,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBtC,IAAA,OAAAsC,QAAA,CAAI,QAAM,CAAI,CAAC,cACftC,IAAA,OAAAsC,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBtC,IAAA,OAAAsC,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRtC,IAAA,UAAAsC,QAAA,CACGlC,QAAQ,CAACoC,GAAG,CAAET,OAAO,eACpB7B,KAAA,OAAAoC,QAAA,eACEtC,IAAA,OAAAsC,QAAA,CAAKP,OAAO,CAACJ,EAAE,CAAK,CAAC,cACrB3B,IAAA,OAAAsC,QAAA,CAAKP,OAAO,CAACU,WAAW,CAAK,CAAC,cAC9BzC,IAAA,OAAAsC,QAAA,CAAKP,OAAO,CAACW,MAAM,CAAK,CAAC,cACzB1C,IAAA,OAAAsC,QAAA,CAAKP,OAAO,CAACf,QAAQ,CAAK,CAAC,cAC3Bd,KAAA,OAAAoC,QAAA,eACEtC,IAAA,WAAQ2C,OAAO,CAAEA,CAAA,GAAMb,UAAU,CAACC,OAAO,CAAE,CAAAO,QAAA,CAAC,MAAI,CAAQ,CAAC,cACzDtC,IAAA,WAAQ2C,OAAO,CAAEA,CAAA,GAAMjB,YAAY,CAACK,OAAO,CAACJ,EAAE,CAAE,CAAAW,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC9D,CAAC,GAREP,OAAO,CAACJ,EASb,CACL,CAAC,CACG,CAAC,EACH,CAAC,cAGRzB,KAAA,QAAAoC,QAAA,eACEtC,IAAA,WAAQ2C,OAAO,CAAEN,cAAe,CAACO,QAAQ,CAAEpC,WAAW,GAAK,CAAE,CAAA8B,QAAA,CAAC,UAE9D,CAAQ,CAAC,cACTpC,KAAA,SAAAoC,QAAA,EAAM,OACC,CAAC9B,WAAW,CAAG,CAAC,CAAC,MAAI,CAACE,UAAU,EACjC,CAAC,cACPV,IAAA,WAAQ2C,OAAO,CAAEP,UAAW,CAACQ,QAAQ,CAAEpC,WAAW,GAAKE,UAAU,CAAG,CAAE,CAAA4B,QAAA,CAAC,MAEvE,CAAQ,CAAC,EACN,CAAC,CAGLhC,WAAW,eACVN,IAAA,CAACF,eAAe,EACdiC,OAAO,CAAEzB,WAAY,CACrBuC,OAAO,CAAEA,CAAA,GAAM,CACbtC,cAAc,CAAC,IAAI,CAAC,CACpBO,aAAa,CAACN,WAAW,CAAEI,cAAc,CAAC,CAAE;AAC9C,CAAE,CACH,CACF,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}